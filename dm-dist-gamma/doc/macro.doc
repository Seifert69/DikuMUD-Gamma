/* ************************************************************************
*  Copyright (C) 1990, 1991 - see 'license.doc' for complete information. *
************************************************************************* */

void CREATE(result, type, number) 

As in Pascal.. Halts on error..

int IS_SET(flag,bit) 

TRUE if the bit is set in flag, else FALSE.

int CAN_SEE(sub, obj)

TRUE if player 'sub' can see player 'obj', else FALSE.

int CAN_SEE_OBJ(sub, obj)                                               \

TRUE if player 'sub' can see object 'obj', else FALSE.

int GET_POS(ch)

Returns the position of the player 'ch'

int IS_SKILL(ch,skilltype)

Returns TRUE if player 'ch' endure skill 'skilltype', else FALSE.

const char *HSHR(ch) 

Returns players "his/her/its"

const char *HMHR(ch)

Returns players "him/her/it/"

char *GET_NAME(ch)

Returns players name

int IS_NPC(ch)

Returns TRUE if player is NPC, FALSE if player is PC

int GET_LEVEL(ch)

Returns the level of the player.

#define GET_CLASS(ch)

Returns the class of the player.

int CAN_WEAR(obj,part) (IS_SET((obj)->obj_flags.wear_flags,part))

Returns TRUE if object 'obj' can be "worn" on 'part', else FALSE.

int GET_ITEM_TYPE(obj) ((obj)->obj_flags.type_flag)

Returns item 'obj' type.

int IS_OBJ_STAT(obj,stat) (IS_SET((obj)->obj_flags.extra_flags,stat))

Returns TRUE if item 'obj' has status 'stat'.

char *CAP(char *str);

Changes the first character in the string pointed to by str to uppercase. 
Returns str.

int OUTSIDE(ch)

Returns TRUE if ch is in an outdoor room.
